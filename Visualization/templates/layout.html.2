<!DOCTYPE html>
<!-- saved from url=(0055)http://bost.ocks.org/mike/cubism/intro/demo-stocks.html -->
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <meta charset="utf-8">
        <style>
            body {
                font-family: "Helvetica Neue", Helvetica, sans-serif;
                margin: 30px auto;
                width: 1280px;
                position: relative;
            }

            header {
                padding: 6px 0;
            }

            .group {
                margin-bottom: 1em;
            }

            .axis {
                font: 10px sans-serif;
                position: fixed;
                pointer-events: none;
                z-index: 2;
            }

            .axis text {
                -webkit-transition: fill-opacity 250ms linear;
            }

            .axis path {
                display: none;
            }

            .axis line {
                stroke: #000;
                shape-rendering: crispEdges;
            }

            .axis.top {
                background-image: linear-gradient(top, #fff 0%, rgba(255,255,255,0) 100%);
                background-image: -o-linear-gradient(top, #fff 0%, rgba(255,255,255,0) 100%);
                background-image: -moz-linear-gradient(top, #fff 0%, rgba(255,255,255,0) 100%);
                background-image: -webkit-linear-gradient(top, #fff 0%, rgba(255,255,255,0) 100%);
                background-image: -ms-linear-gradient(top, #fff 0%, rgba(255,255,255,0) 100%);
                top: 0px;
                padding: 0 0 24px 0;
            }

            .axis.bottom {
                background-image: linear-gradient(bottom, #fff 0%, rgba(255,255,255,0) 100%);
                background-image: -o-linear-gradient(bottom, #fff 0%, rgba(255,255,255,0) 100%);
                background-image: -moz-linear-gradient(bottom, #fff 0%, rgba(255,255,255,0) 100%);
                background-image: -webkit-linear-gradient(bottom, #fff 0%, rgba(255,255,255,0) 100%);
                background-image: -ms-linear-gradient(bottom, #fff 0%, rgba(255,255,255,0) 100%);
                bottom: 0px;
                padding: 24px 0 0 0;
            }

            .horizon {
                border-bottom: solid 1px #000;
                overflow: hidden;
                position: relative;
                padding-left: 160px;
                padding-right:60px;
            }

            .horizon {
                border-top: solid 1px #000;
                border-bottom: solid 1px #000;
            }

            .horizon + .horizon {
                border-top: none;
            }

            .horizon canvas {
                display: block;
            }

            .horizon .title,
            .horizon .value {
                bottom: 0;
                line-height: 30px;
                margin: 0 6px;
                position: absolute;
                text-shadow: 0 1px 0 rgba(255,255,255,.5);
                white-space: nowrap;
            }

            .horizon .title {
                left: 0;
            }

            .horizon .value {
                right: 0;
            }

            .line {
                background: #000;
                z-index: 2;
            }
        </style>
        <script src="static/js/d3.v3.min.js"></script>
        <script src="static/js/cubism.v1.min.js"></script>
    </head>

    <body id="demo">
    <script>
        var context = cubism.context()
            .serverDelay(new Date(2012, 4, 2) - Date.now())
            .step(864e5)
            .size(1280)
            .stop();
        var context1 = cubism.context()
            .serverDelay(new Date(2012, 4, 2) - Date.now())
            .step(864e5)
            .size(280)
            .stop();


/*                    d3.select("#demo").selectAll(".axis")
        .data(["top", "bottom"])
        .enter().append("div")
        .attr("class", function(d) { return d + " axis"; })
        .each(function(d) { d3.select(this).call(context.axis().ticks(12).orient(d)); });

*/
/*        d3.select("body").append("div")
        .attr("class", "rule")
        .call(context.rule());
    */


//        d3.select("body").selectAll(".horizon")
        d3.select("#APPL")
        .data(["AAPL"].map(stock))
        .enter().insert("div", ".bottom")
        .attr("class", "horizon")
        .call(context.horizon()
        .format(d3.format("+,.2p")));

        d3.select("#BIDU")
        .data(["BIDU"].map(stock))
        .enter().insert("div", ".bottom")
        .attr("class", "horizon")
        .call(context.horizon()
        .format(d3.format("+,.2p")));
       
        

/*        context.on("focus", function(i) {
                d3.selectAll(".value").style("right", i == null ? null : context.size() - i + "px");
                });
*/

        var first = true
        function stock(name) {
            var format = d3.time.format("%d-%b-%y");
            var first = true
                return context.metric(function(start, stop, step, callback) {
                        d3.csv("static/demo_csv/" + name + ".csv", function(rows) {
                            rows = rows.map(function(d) { return [format.parse(d.Date), +d.Open]; }).filter(function(d) { return d[1]; });
                            var date = rows[0][0], compare = rows[400][1], value = rows[0][1], values = [value];
                            rows.forEach(function(d) {
                                while ((date = d3.time.day.offset(date, 1)) < d[0]) {
                                values.push(value);
                                }
//                                values.push(value = (d[1] - compare) / compare);
                                values.push(d[1])
                                });
                            if (first == true) {
                                first = false;
                                } else {
//                                    content.size(400);
                                }
                            
                            callback(null, values.slice(-context.size()));
                        });
                }, name);
        }
        </script>

        <div id="AAPL" class="horizon">
            <span class="title">AAPL</span>
            <span class="value">+590%</span>
        </div>
        <div id="BIDU" class="horizon">
            <span class="title">BIDU</span>
            <span class="value">+1,100%</span>
        </div>
<!--        <div class="rule">-->
            <!--<div class="line" style="position: absolute; top: 0px; bottom: 0px; width: 1px; pointer-events: none; display: none;">-->
            <!--</div>-->
        <!--</div>-->

    </body>
</html>
